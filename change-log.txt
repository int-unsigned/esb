07.04.2023
Первоначальный коммит. Демонстрация.
Поддержка только Win32 v8.3.9.1818


17.06.2023
Поддержка 1С-ABI распространена на Win64 и расширена до v8.3.23.1688.
Поддержка 1С-АПИ частично отключена. Только в рамках используемого в Демо.
1С-АПИ будет дорабатываться в следующих версиях.


22.12.2023
Масса изменений, но в основном "behind scene" (построителе, емиттере, т.п.)
с целью делать очередные версии 1С быстро и безболезненно.
Весь есб собирается как лего из .def файлов.
Из видимого:
 - 	1С-АПИ v8323 полностью (с точностью до огрехов и Promise<...>).
	ПС. имеется в виду все теже 1С-файл и 1С-дата, плюс базовое. 
	Прочее не подключал - не нахожу целесообразным. В ближайших планах выложить сам "емиттер", 
	который генерирует эти 1с_...h, чтобы каждый при смог "сгенерить себе есб по-вкусу".

 	Относительно Promise<...> - сам тип сделан, методы его возвращающие имплементированы,
	но в есб Promise<...> не полезен. Метода Ждать... платформы нет 
	и как его получить я не копал глубоко. 

	"Огрехи" в основном связаны с изложением 1С-модели параметров по-умолчанию на языке с++.
	В 1С разрешается опустить параметр в середине списка, а в с++ нет. 
	А методов со значениями по-умолчанию очень много. А информации мало.
	Будьте здесь аккуратны - не все что сделал емиттер можно вызвать "в лоб".
	Может или не откомпилироваться (тогда декларацию поправить надо),
	или не то значение по-умолчанию подставить - тогда с хелпом сверяться.

 -	Все полностью русифицировано (с точностью до огрехов). 
	Можно писать хоть по-русски, хоть по-английски, хоть вперемешку (что, наверное, плохо..)

 -	Изменен механизм инициализаци при загрузке. Теперь esbhlp не делает никакой "магии",
	а просто предоставляет функции для инициализации типов данных, а весь алгоритм
	в с++ коде esb_core. 
	При подключении того или иного модуля, типы объявленные в нем регистрируются
	в списке инициализации, а esbhlp просто вызывает все из списка.
	Это сделано с целью подключения всего прочего из 1С - уж очень там всего много...
	Нужно на модули разбивать.

 -	Изменена декларация енумераторов. Теперь и значение элемента 1С-енума и его константы
	представлены одним типом.

 -	Начаты работы по "шаблонизации" типов данных - МассивИз<Число> и тп.

 - 	Изменена структора папок esb. Все перенесено в esb/include/esb/... и подчищены отосительные пути.
	Теперь для подключения есб достаточно указать путь в настройках проэкта к <ВашПутьКЕсб>/include
	(плюс $(MSBuildProjectDirectory) чтобы есб Ваш esb_app_config.h нашел, см. demo)

 -	Начаты работы по перенесению собственно esb в esb::_internal:: ...,
	чтобы не загружать Ваше пространство имен нюансами реализации

 - 	Все что касается диспатч-информации убрано "под ковер" в отдельные файлы

 -	Развивается "макро-язык" Есб. Пришел к окончательному выводу, что кодогенератор макросы не заменяет.
	Проект переведен на "совместимый" препроцессор - (/Zc:preprocessor).

 -	Плюс много всего "по-мелочи".
	В целом этот релиз несколько "промежуточный", не подчищенный, вычитывать и подчищать надо.
	Давно не выкладывался. Нужно зафиксироваться "под елочку".

 -	ПС. esbhlp.lib кроме как для v8309 и v8323 не делал.


2x.12.2023
 -	Исправления в догонку:
		в esb_api.h	ошибка для StrTemplate
 -	Подкючение esbhlp.lib нужной версии перенесено в esb_config.h


26.01.2024
	Доработаны механизмы TypeInfo и имплементации дополнительных интерфейсов 1С.
	Теперь поддерживаются операции доступа к элементам коллекции по индексу Коллекция.[Число]
	и перечисление коллекций в цикле Для Каждого.
	Интерфейсы ассоциативной коллекции пока не имплементировал. Не нравятся они мне.
	Механизмы коллекции поддерживаются автоматически при декларирования есб-интерфейса 
	для индексируемого и/или итерируемого с++ класса.
	То есть приведенные в пример в демо ПсевдоМассивЧисел стал индексируемым и итерируемым
	без изменений ни в одной строчке кода.
	С данного момента ЕСБ пригодна для программирование чего нибудь полезного.
	(с точностью до огрехов...)
